<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Ubuntu23.10 安装配置 ZSH</title>
      <link href="/posts/33774.html"/>
      <url>/posts/33774.html</url>
      
        <content type="html"><![CDATA[<p>对于经常使用 Linux 环境的人来说，Shell 是我们在日常使用中使用最为频繁的程序了，Shell 为使用者和服务器中建立了一个桥梁，它对外提供了一系列的命令，使用者通过这些命令可以让服务器知道使用者的意图。</p><blockquote><p>Shell 既是一种脚本编程语言，也是一个连接内核和用户的软件。在 Linux 发展的早期，唯一能用的工具就是 Shell,Linux 用户都是在 Shell 中输入文本命令，并查看文本输出，当然如果有必要的话，Shell 也可以显示一些基本的图形。常见的 Shell 有 sh (bourne shell)、csh (c shell)、ksh (korn shell)、 bash (bourne again shell)、zsh (Z-shell)</p></blockquote><p>目前 ubuntu 默认的 Shell 是 bash, 可以看到很单调，不够美观，因此我们将默认 bash 更改为更美观的 zsh.<br><img src="https://cdn.jsdelivr.net/gh/qichenxiaoni/Picture-warehouse@main/hexo/1/%E7%BB%88%E7%AB%AF%E5%8E%9F%E5%A7%8B%E6%A0%B7%E5%BC%8F.png"></p><h3 id="bash-和-zsh-的比较"><a href="#bash-和-zsh-的比较" class="headerlink" title="bash 和 zsh 的比较"></a>bash 和 zsh 的比较</h3><ol><li>从交互式终端的角度来讲，zsh 比 bash 更为强大，但是 bash 更符合 posix 标准，更适合做脚本解释器，因此现在有一些 Linux 系统终端还是采用 bash 作为默认的 shell, 例如 Ubuntu 以及风味版 Ubuntu, 但是也有一些 Linux 系统终端就采用的是 zsh, 例如 arch 系的 manjaro 系统就是采用 zsh 作为默认 shell.</li><li>从使用的便捷角度来说，bash 的上手速度明显要快于 zsh，基本上就是到手即可用，而 zsh 则需要经过一些配置才能好用（甚至需要用到 oh-my-zsh）。</li><li>但是配置好 zsh 之后，zsh 在某些方面我个人觉得还是优于 bash 的，例如：<ul><li>色彩高亮，拼写检查：<br>  zsh 可以根据颜色来判断你输入的内容是否正确，例如如果是错误的内容会显示红色，反之则是其他的颜色，例如绿色、黑色等；</li><li>命令提示，历史记录：<br>  输入某些之前使用过的命令的开头一部分之后，后面会用灰色来预判你接下来的命令，甚至随着你的输入，预判的内容也会随之不断的更新，当你看到预测的命令是需要的时候，只需要按下方向键的右键即可完整的输入你需要的命令；</li><li>智能补全<br>  bash 的补全功能在 zsh 的补全功能面前是相形见绌的，特别是在长路径切换的时候，bash 会持续提示你需要继续输入，而 zsh 则需要连续敲击 TAB 键两次之后，zsh 就会在下面给你一个补全目录，让你来进行选择。</li></ul></li></ol><h3 id="安装-zsh"><a href="#安装-zsh" class="headerlink" title="安装 zsh"></a>安装 zsh</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 zsh</span></span><br><span class="line">sudo apt install zsh</span><br><span class="line"><span class="comment"># 切换默认 shell</span></span><br><span class="line">chsh -s /bin/zsh</span><br><span class="line"><span class="comment"># 重启或者注销用户之后打开终端</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$SHELL</span></span><br><span class="line"><span class="comment"># 如果输出的是/bin/zsh, 而不是/bin/bash, 那么就切换默认 shell 成功</span></span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/qichenxiaoni/Picture-warehouse@main/hexo/1/%E6%9F%A5%E7%9C%8B%E9%BB%98%E8%AE%A4shell.png" alt="查看默认 shell"><br>如上图，显示<code>/bin/zsh</code>则证明切换默认 shell 成功。</p><h3 id="下载-oh-my-zsh"><a href="#下载-oh-my-zsh" class="headerlink" title="下载 oh-my-zsh"></a>下载 oh-my-zsh</h3><p>zsh 虽然好用，但是一开始的 zsh 直接用起来还是很麻烦的，甚至不如之前的 bash, 但是幸运的是在 github 上有大神已经帮我们配置好了一个好用的框架——<a href="https://github.com/ohmyzsh/ohmyzsh">oh-my-zsh</a>，在官网中已经写好如何下载安装 oh-my-zsh, 但是不知道为何我在使用官网的方法的时候，经常报网络问题（访问其他国外平台都很正常，但是就是无法按照官网给出的方法下载配置），因此，我选择直接下载 oh-my-zsh 的文件夹手动配置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 访问 oh-my-zsh 的 github 仓库并下载</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/ohmyzsh/ohmyzsh.git ~/.oh-my-zsh</span><br><span class="line"><span class="comment"># 手动安装</span></span><br><span class="line">sh ~/.oh-my-zsh/tools/install.sh</span><br></pre></td></tr></table></figure><p>运行以上代码之后，如果出现下图，证明 oh-my-zsh 安装成功</p><p><img src="https://cdn.jsdelivr.net/gh/qichenxiaoni/Picture-warehouse@main/hexo/1/oh-my-zsh%E5%AE%89%E8%A3%85%E6%88%90%E5%8A%9F.png" alt="安装 oh-my-zsh"></p><h3 id="配置oh-my-zsh"><a href="#配置oh-my-zsh" class="headerlink" title="配置oh-my-zsh"></a>配置oh-my-zsh</h3><p>oh-my-zsh的配置文件名字叫<code>&#39;.zshrc&#39;</code>，因此我们想要修改配置oh-my-zsh只需要在这个文件中修改就可以了。<br>oh-my-zsh的主题十分的丰富，它自带了很多的主题文件，当然它也有社区主题文件，如果你想要自己找一个合适的主题的话，可以访问它的<a href="https://github.com/ohmyzsh/ohmyzsh/wiki">wiki</a>,在里面你可以看到它所有的主题和插件，甚至你可以通过wiki来进一步自定义你的zsh,在一开始安装的时候，它默认的主题是<code>robbyrussell</code>，如果想要修改主题的话，只需要打开它的配置文件，找到<code>ZSH_THEME=&quot;robbyrussell&quot;</code>，修改其值即可，例如我将其修改为<code>ZSH_THEME=&quot;powerlevel9k/powerlevel9k&quot;</code>，它的效果如下：</p><p><img src="https://cdn.jsdelivr.net/gh/qichenxiaoni/Picture-warehouse@main/hexo/1/%E4%BF%AE%E6%94%B9zsh%E4%B8%BB%E9%A2%98.png" alt="修改zsh主题"></p><blockquote><p>记住，修改完<code>.zshrc</code>文件，一定要 执行一次<code>source ~/.zshrc</code>命令，因为这样，你修改的内容才能生效。</p></blockquote><h4 id="添加插件"><a href="#添加插件" class="headerlink" title="添加插件"></a>添加插件</h4><p>可以说zsh的好用离不开各项插件的帮助，也正是因为它可以添加各式各样的插件，所以它的可定制性才会那么高，也正是因为这样，每个人都可以设计出不一样的zsh出来。<br>添加插件依旧需要在配置文件.zshrc文件中修改，关于插件的默认设置只有一个git,其余的插件需要我们自行去添加。<br>在这里我推荐两款最为常见的插件，一个是自动补全插件和一个语法高亮插件，这两个插件的添加都十分的简单。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自动补全插件</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-autosuggestions <span class="variable">$ZSH_CUSTOM</span>/plugins/zsh-autosuggestions</span><br><span class="line"><span class="comment"># 语法高亮插件</span></span><br><span class="line">git <span class="built_in">clone</span> https://github.com/zsh-users/zsh-syntax-highlighting.git<span class="variable">$ZSH_CUSTOM</span>/plugins/zsh-syntax-highlighting</span><br><span class="line"><span class="comment"># 在.zshrc文件中修改</span></span><br><span class="line">plugins=(</span><br><span class="line">    git</span><br><span class="line">    zsh-syntax-highlighting</span><br><span class="line">    zsh-autosuggestions</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>最后再运行一次<code>source ~/.zshrc</code>即可生效。</p><p>最后，我将我自己的配置文件放出来，这样大家可以参考一下。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># If you come from bash you might have to change your $PATH.</span></span><br><span class="line"><span class="comment"># export PATH=$HOME/bin:/usr/local/bin:$PATH</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Path to your oh-my-zsh installation.</span></span><br><span class="line"><span class="built_in">export</span> ZSH=<span class="string">&quot;<span class="variable">$HOME</span>/.oh-my-zsh&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set name of the theme to load --- if set to &quot;random&quot;, it will</span></span><br><span class="line"><span class="comment"># load a random theme each time oh-my-zsh is loaded, in which case,</span></span><br><span class="line"><span class="comment"># to know which specific one was loaded, run: echo $RANDOM_THEME</span></span><br><span class="line"><span class="comment"># See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes</span></span><br><span class="line"><span class="comment"># ZSH_THEME=&quot;robbyrussell&quot;</span></span><br><span class="line">ZSH_THEME=<span class="string">&quot;powerlevel9k/powerlevel9k&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set list of themes to pick from when loading at random</span></span><br><span class="line"><span class="comment"># Setting this variable when ZSH_THEME=random will cause zsh to load</span></span><br><span class="line"><span class="comment"># a theme from this variable instead of looking in $ZSH/themes/</span></span><br><span class="line"><span class="comment"># If set to an empty array, this variable will have no effect.</span></span><br><span class="line"><span class="comment"># ZSH_THEME_RANDOM_CANDIDATES=( &quot;robbyrussell&quot; &quot;agnoster&quot; )</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to use case-sensitive completion.</span></span><br><span class="line"><span class="comment"># CASE_SENSITIVE=&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to use hyphen-insensitive completion.</span></span><br><span class="line"><span class="comment"># Case-sensitive completion must be off. _ and - will be interchangeable.</span></span><br><span class="line"><span class="comment"># HYPHEN_INSENSITIVE=&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment one of the following lines to change the auto-update behavior</span></span><br><span class="line"><span class="comment"># zstyle &#x27;:omz:update&#x27; mode disabled  # disable automatic updates</span></span><br><span class="line"><span class="comment"># zstyle &#x27;:omz:update&#x27; mode auto      # update automatically without asking</span></span><br><span class="line"><span class="comment"># zstyle &#x27;:omz:update&#x27; mode reminder  # just remind me to update when it&#x27;s time</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to change how often to auto-update (in days).</span></span><br><span class="line"><span class="comment"># zstyle &#x27;:omz:update&#x27; frequency 13</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line if pasting URLs and other text is messed up.</span></span><br><span class="line"><span class="comment"># DISABLE_MAGIC_FUNCTIONS=&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to disable colors in ls.</span></span><br><span class="line"><span class="comment"># DISABLE_LS_COLORS=&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to disable auto-setting terminal title.</span></span><br><span class="line"><span class="comment"># DISABLE_AUTO_TITLE=&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to enable command auto-correction.</span></span><br><span class="line"><span class="comment"># ENABLE_CORRECTION=&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line to display red dots whilst waiting for completion.</span></span><br><span class="line"><span class="comment"># You can also set it to another string to have that shown instead of the default red dots.</span></span><br><span class="line"><span class="comment"># e.g. COMPLETION_WAITING_DOTS=&quot;%F&#123;yellow&#125;waiting...%f&quot;</span></span><br><span class="line"><span class="comment"># Caution: this setting can cause issues with multiline prompts in zsh &lt; 5.7.1 (see #5765)</span></span><br><span class="line"><span class="comment"># COMPLETION_WAITING_DOTS=&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line if you want to disable marking untracked files</span></span><br><span class="line"><span class="comment"># under VCS as dirty. This makes repository status check for large repositories</span></span><br><span class="line"><span class="comment"># much, much faster.</span></span><br><span class="line"><span class="comment"># DISABLE_UNTRACKED_FILES_DIRTY=&quot;true&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Uncomment the following line if you want to change the command execution time</span></span><br><span class="line"><span class="comment"># stamp shown in the history command output.</span></span><br><span class="line"><span class="comment"># You can set one of the optional three formats:</span></span><br><span class="line"><span class="comment"># &quot;mm/dd/yyyy&quot;|&quot;dd.mm.yyyy&quot;|&quot;yyyy-mm-dd&quot;</span></span><br><span class="line"><span class="comment"># or set a custom format using the strftime function format specifications,</span></span><br><span class="line"><span class="comment"># see &#x27;man strftime&#x27; for details.</span></span><br><span class="line"><span class="comment"># HIST_STAMPS=&quot;mm/dd/yyyy&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Would you like to use another custom folder than $ZSH/custom?</span></span><br><span class="line"><span class="comment"># ZSH_CUSTOM=/path/to/new-custom-folder</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Which plugins would you like to load?</span></span><br><span class="line"><span class="comment"># Standard plugins can be found in $ZSH/plugins/</span></span><br><span class="line"><span class="comment"># Custom plugins may be added to $ZSH_CUSTOM/plugins/</span></span><br><span class="line"><span class="comment"># Example format: plugins=(rails git textmate ruby lighthouse)</span></span><br><span class="line"><span class="comment"># Add wisely, as too many plugins slow down shell startup.</span></span><br><span class="line">plugins=(</span><br><span class="line">  git zsh-autosuggestions zsh-syntax-highlighting</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> <span class="variable">$ZSH</span>/oh-my-zsh.sh</span><br><span class="line"><span class="built_in">source</span> ~/.profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># User configuration</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># export MANPATH=&quot;/usr/local/man:$MANPATH&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># You may need to manually set your language environment</span></span><br><span class="line"><span class="comment"># export LANG=en_US.UTF-8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Preferred editor for local and remote sessions</span></span><br><span class="line"><span class="comment"># if [[ -n $SSH_CONNECTION ]]; then</span></span><br><span class="line"><span class="comment">#   export EDITOR=&#x27;vim&#x27;</span></span><br><span class="line"><span class="comment"># else</span></span><br><span class="line"><span class="comment">#   export EDITOR=&#x27;mvim&#x27;</span></span><br><span class="line"><span class="comment"># fi</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Compilation flags</span></span><br><span class="line"><span class="comment"># export ARCHFLAGS=&quot;-arch x86_64&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Set personal aliases, overriding those provided by oh-my-zsh libs,</span></span><br><span class="line"><span class="comment"># plugins, and themes. Aliases can be placed here, though oh-my-zsh</span></span><br><span class="line"><span class="comment"># users are encouraged to define aliases within the ZSH_CUSTOM folder.</span></span><br><span class="line"><span class="comment"># For a full list of active aliases, run `alias`.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Example aliases</span></span><br><span class="line"><span class="comment"># alias zshconfig=&quot;mate ~/.zshrc&quot;</span></span><br><span class="line"><span class="comment"># alias ohmyzsh=&quot;mate ~/.oh-my-zsh&quot;</span></span><br></pre></td></tr></table></figure><blockquote><p>有时候如果你发现你的环境变量在bash下好好的，但是换成zsh之后，就莫名其妙失效了，不用着急，只需要在.&#x2F;zshrc文件中加上一句<code>source ~/.profile</code>，这样它就会在每次启动的时候都会重新刷新一遍环境配置文件，保证其生效。</p></blockquote><p>至此，我们就完成了zsh的安装以及配置了。</p><p>感谢观看！！！</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ubuntu zsh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/posts/16107.html"/>
      <url>/posts/16107.html</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
